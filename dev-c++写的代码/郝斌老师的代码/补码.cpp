/*		2019年8月23日  09点32分  

 原码是一串二进制数,是原始数据,最高位为符号位,正数为0,负数为1.
反码是对原码各位进行求反得到,不改变符号位.

补码分两种情况:
1,对正数来说,补码即原码.
2,对负数来说,补码是原码的反码再加上1.

计算机中一般用补码来表示数据.

*/ 

# include <stdio.h>

int main(void)
{
	int i = -100;
	printf("i = %#X\n",i);//加#最后输出结果就会显示0X 
	
	int j = 0xFFFFFFCA;
	printf("j = %d\n",j);
	 
	return 0;
 } 
 /*		输出结果
 i = 0XFFFFFF9C
 j = -54

--------------------------------
Process exited after 0.2232 seconds with return value 0
请按任意键继续. .
关于i
先求100的二进制数，利用权值算，为01100100前面应该还有28个0
因为是32位  先看01100100按位取反位10011011再加一位10011100
这个数转化为十六进制为（四位四位的看）9C此时前面都为一，即6组1
一组有4个一，转化成是十六进制为 6个F
故输出结果为FFFFFF9C  前面0X表示十六进制 

关于j
首先确定这是一个负数，前面是1表示负数，0表示正数
最后输出结果是十进制，因此看后8位即可，就是CA
转换成2进制位11001010（也是四位四位看）然后按位取反
00110101 然后再加1 得00110110 然后这个数就是要求的那个十进制数的绝对值
然后求得这个十六进制位36，十进制位54（3*16+6）
然后前面加个符号即可，因此为-54 
 
 
 */ 
